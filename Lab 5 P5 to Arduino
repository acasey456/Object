//Arduino 
#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
  #include <avr/power.h>
#endif

#define PIN 3

Adafruit_NeoPixel strip = Adafruit_NeoPixel(4, PIN, NEO_GRB + NEO_KHZ800);

void setup() {
  Serial.begin(9600);

  strip.begin();
  strip.show(); // Initialize all pixels to 'off'
}

void loop() {
  //RECEIVE
  if(Serial.available())
  { //if data comes in
    //read it
    int incomingVal = Serial.read();
    Serial.println(incomingVal);
    strip.setPixelColor(0, 100, 200, incomingVal);
    strip.setPixelColor(1, 100, 200, incomingVal);
    strip.setPixelColor(2, 100, 200, incomingVal);
    strip.setPixelColor(3, 100, 200, incomingVal);
    strip.setPixelColor(4, 100, 200, incomingVal);
    strip.show();
  }
}

//P5
//Serial communication template originally by Arielle Hein 
//Modified by Allison Casey 

var serial; //variable to hold an instance of the serial port library
var portName = 'COM3'; //fill in with YOUR port

var c = 0; // variable to control color

function setup() {
  createCanvas(400, 300);

  serial = new p5.SerialPort(); //a new instance of serial port library

  //set up events for serial communication
  serial.on('connected', serverConnected);
  serial.on('open', portOpen);
  serial.on('data', serialEvent);
  serial.on('error', serialError);
  serial.on('close', portClose);

  //open our serial port
  serial.open(portName);

  //let's figure out what port we're on - useful for determining your port
  // serial.on('list', printList); //set a callback function for the serialport list event
  // serial.list(); //list the serial ports
}

function draw() {
  background('dodgerblue');
  noStroke();
  fill(100, 200, c);
  ellipse(width/2, height/2, 100, 100);
}


function keyTyped(){
  if(key === ' ')
  {
    print('space');
    c = int(random(255));
    print(c);
    serial.write(c); //send the color value to arduino
  } 
}


//all my callback functions are down here:
//these are useful for giving feedback

function serverConnected(){
	console.log('connected to the server');
}

function portOpen(){
  console.log('the serial port opened!');
}

//THIS IS WHERE WE RECEIVE DATA!!!!!!
function serialEvent(){
	//receive serial data here
  
  //read incoming string from serial port
  var inString = serial.readLine();
  
  //if we have something, if there is a string, parse it
  if(inString.length>0){
    
    //split the string at the comma and save to array
    var sensorArray = split(inString, ",");
    
    
  }
  
}

function serialError(err){
  console.log('something went wrong with the port. ' + err);
}

function portClose(){
  console.log('the port was closed');
}

// get the list of ports:
function printList(portList) {
 // portList is an array of serial port names
 for (var i = 0; i < portList.length; i++) {
 // Display the list the console:
 print(i + " " + portList[i]);
 }
}
